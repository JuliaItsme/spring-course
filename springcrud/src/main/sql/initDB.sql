CREATE TABLE Person
(
    id    INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR NOT NULL,
    age   INT CHECK ( age > 0 ),
    email VARCHAR UNIQUE
);

CREATE TABLE Item
(
    id        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    person_id INT          REFERENCES Person (id) ON DELETE SET NULL,
    item_name VARCHAR(100) NOT NULL
);

CREATE TABLE Director
(
    director_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(100) NOT NULL UNIQUE,
    age         INT CHECK ( age > 10 )
);

CREATE TABLE Movie
(
    movie_id           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    director_id        INT          NOT NULL REFERENCES director (director_id),
    name               VARCHAR(200) NOT NULL UNIQUE,
    year_of_production INT CHECK ( Movie.year_of_production > 1900 )
);


-- One to One
CREATE TABLE Citizen
(
    citizen_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name       VARCHAR(100) NOT NULL,
    age        INT CHECK (age > 0)
);

CREATE TABLE Passport
(
    citizen_id      INT PRIMARY KEY REFERENCES Citizen (citizen_id),
    passport_number INT
);


-- Many to Many - Actors to Movies
CREATE TABLE Actor
(
    actor_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(100) NOT NULL UNIQUE,
    age      INT CHECK (age > 0)
);

-- Создаем связывающую таблицу (JOIN TABLE)
CREATE TABLE Actor_Movie
(
    actor_id INT REFERENCES Actor (actor_id),
    movie_id INT REFERENCES Movie (movie_id),
    PRIMARY KEY (actor_id, movie_id)
);